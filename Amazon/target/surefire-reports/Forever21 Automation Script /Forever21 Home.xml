<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite hostname="Varijas-MacBook-Pro.local" ignored="0" name="Forever21 Home" tests="25" failures="1" timestamp="23 Mar 2019 22:47:52 GMT" time="16.567" errors="0">
  <testcase name="@BeforeMethod setUp" time="4.169" classname="base.CommonAPI">
    <failure type="org.openqa.selenium.NoSuchWindowException" message="no such window: window was already closed
  (Session info: chrome=73.0.3683.86)
  (Driver info: chromedriver=2.46.628411 (3324f4c8be9ff2f70a05a30ebc72ffb013e1a71e),platform=Mac OS X 10.14.3 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
Build info: version: &amp;apos;3.141.59&amp;apos;, revision: &amp;apos;e82be7d358&amp;apos;, time: &amp;apos;2018-11-14T08:17:03&amp;apos;
System info: host: &amp;apos;Varijas-MacBook-Pro.local&amp;apos;, ip: &amp;apos;fe80:0:0:0:4d4:5cbf:b365:82c8%en0&amp;apos;, os.name: &amp;apos;Mac OS X&amp;apos;, os.arch: &amp;apos;x86_64&amp;apos;, os.version: &amp;apos;10.14.3&amp;apos;, java.version: &amp;apos;1.8.0_201&amp;apos;
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, acceptSslCerts: false, applicationCacheEnabled: false, browserConnectionEnabled: false, browserName: chrome, chrome: {chromedriverVersion: 2.46.628411 (3324f4c8be9ff2..., userDataDir: /var/folders/5m/8t7g_9lj783...}, cssSelectorsEnabled: true, databaseEnabled: false, goog:chromeOptions: {debuggerAddress: localhost:51357}, handlesAlerts: true, hasTouchScreen: false, javascriptEnabled: true, locationContextEnabled: true, mobileEmulationEnabled: false, nativeEvents: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: MAC, platformName: MAC, proxy: Proxy(), rotatable: false, setWindowRect: true, strictFileInteractability: false, takesHeapSnapshot: true, takesScreenshot: true, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unexpectedAlertBehaviour: ignore, unhandledPromptBehavior: ignore, version: 73.0.3683.86, webStorageEnabled: true}
Session ID: fc3e9ba128064d68d17e364c98034046">
      <![CDATA[org.openqa.selenium.NoSuchWindowException: no such window: window was already closed
  (Session info: chrome=73.0.3683.86)
  (Driver info: chromedriver=2.46.628411 (3324f4c8be9ff2f70a05a30ebc72ffb013e1a71e),platform=Mac OS X 10.14.3 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'Varijas-MacBook-Pro.local', ip: 'fe80:0:0:0:4d4:5cbf:b365:82c8%en0', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.14.3', java.version: '1.8.0_201'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, acceptSslCerts: false, applicationCacheEnabled: false, browserConnectionEnabled: false, browserName: chrome, chrome: {chromedriverVersion: 2.46.628411 (3324f4c8be9ff2..., userDataDir: /var/folders/5m/8t7g_9lj783...}, cssSelectorsEnabled: true, databaseEnabled: false, goog:chromeOptions: {debuggerAddress: localhost:51357}, handlesAlerts: true, hasTouchScreen: false, javascriptEnabled: true, locationContextEnabled: true, mobileEmulationEnabled: false, nativeEvents: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: MAC, platformName: MAC, proxy: Proxy(), rotatable: false, setWindowRect: true, strictFileInteractability: false, takesHeapSnapshot: true, takesScreenshot: true, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unexpectedAlertBehaviour: ignore, unhandledPromptBehavior: ignore, version: 73.0.3683.86, webStorageEnabled: true}
Session ID: fc3e9ba128064d68d17e364c98034046
at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:214)
at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:166)
at org.openqa.selenium.remote.http.JsonHttpResponseCodec.reconstructValue(JsonHttpResponseCodec.java:40)
at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:80)
at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:44)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)
at org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.maximize(RemoteWebDriver.java:837)
at base.CommonAPI.setUp(CommonAPI.java:48)
... Removed 36 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@BeforeMethod initialize" time="0.0" classname="testamazonpages.TestHomePageAmazon">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase name="@AfterMethod cleanUp" time="0.0" classname="base.CommonAPI">
    <skipped/>
  </testcase> <!-- @AfterMethod cleanUp -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="base.CommonAPI">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@BeforeMethod initialize" time="0.0" classname="testamazonpages.TestHomePageAmazon">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase name="@AfterMethod cleanUp" time="0.0" classname="base.CommonAPI">
    <skipped/>
  </testcase> <!-- @AfterMethod cleanUp -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="base.CommonAPI">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@BeforeMethod initialize" time="0.0" classname="testamazonpages.TestHomePageAmazon">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase name="@AfterMethod cleanUp" time="0.0" classname="base.CommonAPI">
    <skipped/>
  </testcase> <!-- @AfterMethod cleanUp -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="base.CommonAPI">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@BeforeMethod initialize" time="0.0" classname="testamazonpages.TestHomePageAmazon">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase name="@AfterMethod cleanUp" time="0.0" classname="base.CommonAPI">
    <skipped/>
  </testcase> <!-- @AfterMethod cleanUp -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="base.CommonAPI">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@BeforeMethod initialize" time="0.0" classname="testamazonpages.TestHomePageAmazon">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase name="@AfterMethod cleanUp" time="0.0" classname="base.CommonAPI">
    <skipped/>
  </testcase> <!-- @AfterMethod cleanUp -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="base.CommonAPI">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@BeforeMethod initialize" time="0.0" classname="testamazonpages.TestHomePageAmazon">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase name="@AfterMethod cleanUp" time="0.0" classname="base.CommonAPI">
    <skipped/>
  </testcase> <!-- @AfterMethod cleanUp -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="base.CommonAPI">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@BeforeMethod initialize" time="0.0" classname="testamazonpages.TestHomePageAmazon">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase name="@AfterMethod cleanUp" time="0.0" classname="base.CommonAPI">
    <skipped/>
  </testcase> <!-- @AfterMethod cleanUp -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="base.CommonAPI">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@BeforeMethod initialize" time="0.0" classname="testamazonpages.TestHomePageAmazon">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase name="@AfterMethod cleanUp" time="0.0" classname="base.CommonAPI">
    <skipped/>
  </testcase> <!-- @AfterMethod cleanUp -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="base.CommonAPI">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@BeforeMethod initialize" time="0.0" classname="testamazonpages.TestHomePageAmazon">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase name="@AfterMethod cleanUp" time="0.0" classname="base.CommonAPI">
    <skipped/>
  </testcase> <!-- @AfterMethod cleanUp -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="base.CommonAPI">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@BeforeMethod initialize" time="0.0" classname="testamazonpages.TestHomePageAmazon">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase name="@AfterMethod cleanUp" time="0.0" classname="base.CommonAPI">
    <skipped/>
  </testcase> <!-- @AfterMethod cleanUp -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="base.CommonAPI">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@BeforeMethod initialize" time="0.0" classname="testamazonpages.TestHomePageAmazon">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase name="@AfterMethod cleanUp" time="0.0" classname="base.CommonAPI">
    <skipped/>
  </testcase> <!-- @AfterMethod cleanUp -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="base.CommonAPI">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@BeforeMethod initialize" time="0.0" classname="testamazonpages.TestHomePageAmazon">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase name="@AfterMethod cleanUp" time="0.0" classname="base.CommonAPI">
    <skipped/>
  </testcase> <!-- @AfterMethod cleanUp -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="base.CommonAPI">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@BeforeMethod initialize" time="0.0" classname="testamazonpages.TestHomePageAmazon">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase name="@AfterMethod cleanUp" time="0.0" classname="base.CommonAPI">
    <skipped/>
  </testcase> <!-- @AfterMethod cleanUp -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="base.CommonAPI">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@BeforeMethod initialize" time="0.0" classname="testamazonpages.TestHomePageAmazon">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase name="@AfterMethod cleanUp" time="0.0" classname="base.CommonAPI">
    <skipped/>
  </testcase> <!-- @AfterMethod cleanUp -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="base.CommonAPI">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@BeforeMethod initialize" time="0.0" classname="testamazonpages.TestHomePageAmazon">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase name="@AfterMethod cleanUp" time="0.0" classname="base.CommonAPI">
    <skipped/>
  </testcase> <!-- @AfterMethod cleanUp -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="base.CommonAPI">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@BeforeMethod initialize" time="0.0" classname="testamazonpages.TestHomePageAmazon">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase name="@AfterMethod cleanUp" time="0.0" classname="base.CommonAPI">
    <skipped/>
  </testcase> <!-- @AfterMethod cleanUp -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="base.CommonAPI">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@BeforeMethod initialize" time="0.0" classname="testamazonpages.TestHomePageAmazon">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase name="@AfterMethod cleanUp" time="0.0" classname="base.CommonAPI">
    <skipped/>
  </testcase> <!-- @AfterMethod cleanUp -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="base.CommonAPI">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@BeforeMethod initialize" time="0.0" classname="testamazonpages.TestHomePageAmazon">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase name="@AfterMethod cleanUp" time="0.0" classname="base.CommonAPI">
    <skipped/>
  </testcase> <!-- @AfterMethod cleanUp -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="base.CommonAPI">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@BeforeMethod initialize" time="0.0" classname="testamazonpages.TestHomePageAmazon">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase name="@AfterMethod cleanUp" time="0.0" classname="base.CommonAPI">
    <skipped/>
  </testcase> <!-- @AfterMethod cleanUp -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="base.CommonAPI">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@BeforeMethod initialize" time="0.0" classname="testamazonpages.TestHomePageAmazon">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase name="@AfterMethod cleanUp" time="0.0" classname="base.CommonAPI">
    <skipped/>
  </testcase> <!-- @AfterMethod cleanUp -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="base.CommonAPI">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@BeforeMethod initialize" time="0.0" classname="testamazonpages.TestHomePageAmazon">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase name="@AfterMethod cleanUp" time="0.0" classname="base.CommonAPI">
    <skipped/>
  </testcase> <!-- @AfterMethod cleanUp -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="base.CommonAPI">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@BeforeMethod initialize" time="0.0" classname="testamazonpages.TestHomePageAmazon">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase name="@AfterMethod cleanUp" time="0.0" classname="base.CommonAPI">
    <skipped/>
  </testcase> <!-- @AfterMethod cleanUp -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="base.CommonAPI">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@BeforeMethod initialize" time="0.0" classname="testamazonpages.TestHomePageAmazon">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase name="@AfterMethod cleanUp" time="0.0" classname="base.CommonAPI">
    <skipped/>
  </testcase> <!-- @AfterMethod cleanUp -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="base.CommonAPI">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@BeforeMethod initialize" time="0.0" classname="testamazonpages.TestHomePageAmazon">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase name="@AfterMethod cleanUp" time="0.0" classname="base.CommonAPI">
    <skipped/>
  </testcase> <!-- @AfterMethod cleanUp -->
  <testcase name="testAdFeedbackWindow" time="2.786" classname="testamazonpages.TestHomePageAmazon">
    <failure type="org.openqa.selenium.NoSuchElementException" message="Cannot locate an element using css selector=#ad-feedback-text-right-2
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: &amp;apos;3.141.59&amp;apos;, revision: &amp;apos;e82be7d358&amp;apos;, time: &amp;apos;2018-11-14T08:17:03&amp;apos;
System info: host: &amp;apos;Varijas-MacBook-Pro.local&amp;apos;, ip: &amp;apos;fe80:0:0:0:4d4:5cbf:b365:82c8%en0&amp;apos;, os.name: &amp;apos;Mac OS X&amp;apos;, os.arch: &amp;apos;x86_64&amp;apos;, os.version: &amp;apos;10.14.3&amp;apos;, java.version: &amp;apos;1.8.0_201&amp;apos;
Driver info: driver.version: RemoteWebDriver">
      <![CDATA[org.openqa.selenium.NoSuchElementException: Cannot locate an element using css selector=#ad-feedback-text-right-2
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'Varijas-MacBook-Pro.local', ip: 'fe80:0:0:0:4d4:5cbf:b365:82c8%en0', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.14.3', java.version: '1.8.0_201'
Driver info: driver.version: RemoteWebDriver
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:327)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByCssSelector(RemoteWebDriver.java:420)
at org.openqa.selenium.By$ByCssSelector.findElement(By.java:431)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at com.sun.proxy.$Proxy10.getWrappedElement(Unknown Source)
at org.openqa.selenium.remote.internal.WebElementToJsonConverter.apply(WebElementToJsonConverter.java:50)
at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)
at java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)
at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481)
at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)
at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708)
at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:499)
at org.openqa.selenium.remote.RemoteWebDriver.executeScript(RemoteWebDriver.java:484)
at amazonpages.HomePageAmazon.adFeedbackWindow(HomePageAmazon.java:467)
at testamazonpages.TestHomePageAmazon.testAdFeedbackWindow(TestHomePageAmazon.java:144)
... Removed 29 stack frames]]>
    </failure>
  </testcase> <!-- testAdFeedbackWindow -->
  <testcase name="testAddToCart" time="0.0" classname="testamazonpages.TestHomePageAmazon">
    <skipped/>
  </testcase> <!-- testAddToCart -->
  <testcase name="testCheckboxesInGiftCards" time="0.0" classname="testamazonpages.TestHomePageAmazon">
    <skipped/>
  </testcase> <!-- testCheckboxesInGiftCards -->
  <testcase name="testClickLangSettings" time="0.0" classname="testamazonpages.TestHomePageAmazon">
    <skipped/>
  </testcase> <!-- testClickLangSettings -->
  <testcase name="testExaternalLinks" time="0.0" classname="testamazonpages.TestHomePageAmazon">
    <skipped/>
  </testcase> <!-- testExaternalLinks -->
  <testcase name="testGetDropdownOptions" time="0.0" classname="testamazonpages.TestHomePageAmazon">
    <skipped/>
  </testcase> <!-- testGetDropdownOptions -->
  <testcase name="testGetPrimePageTabs" time="0.0" classname="testamazonpages.TestHomePageAmazon">
    <skipped/>
  </testcase> <!-- testGetPrimePageTabs -->
  <testcase name="testIFrameExample" time="0.0" classname="testamazonpages.TestHomePageAmazon">
    <skipped/>
  </testcase> <!-- testIFrameExample -->
  <testcase name="testImagePresent" time="0.0" classname="testamazonpages.TestHomePageAmazon">
    <skipped/>
  </testcase> <!-- testImagePresent -->
  <testcase name="testInternalLinks" time="0.0" classname="testamazonpages.TestHomePageAmazon">
    <skipped/>
  </testcase> <!-- testInternalLinks -->
  <testcase name="testInvalidAccountSignIn" time="0.0" classname="testamazonpages.TestHomePageAmazon">
    <skipped/>
  </testcase> <!-- testInvalidAccountSignIn -->
  <testcase name="testInvalidAccountSignIn" time="0.0" classname="testamazonpages.TestHomePageAmazon">
    <skipped/>
  </testcase> <!-- testInvalidAccountSignIn -->
  <testcase name="testNavigation" time="0.0" classname="testamazonpages.TestHomePageAmazon">
    <skipped/>
  </testcase> <!-- testNavigation -->
  <testcase name="testPrimeLink" time="0.0" classname="testamazonpages.TestHomePageAmazon">
    <skipped/>
  </testcase> <!-- testPrimeLink -->
  <testcase name="testPrimePageTable" time="0.0" classname="testamazonpages.TestHomePageAmazon">
    <skipped/>
  </testcase> <!-- testPrimePageTable -->
  <testcase name="testSearchButton" time="0.0" classname="testamazonpages.TestHomePageAmazon">
    <skipped/>
  </testcase> <!-- testSearchButton -->
  <testcase name="testSearchForItems" time="0.0" classname="testamazonpages.TestHomePageAmazon">
    <skipped/>
  </testcase> <!-- testSearchForItems -->
  <testcase name="testSearchForItemsMongo" time="0.0" classname="testamazonpages.TestHomePageAmazon">
    <skipped/>
  </testcase> <!-- testSearchForItemsMongo -->
  <testcase name="testSearchItemsSql" time="0.0" classname="testamazonpages.TestHomePageAmazon">
    <skipped/>
  </testcase> <!-- testSearchItemsSql -->
  <testcase name="testSearchResults" time="0.0" classname="testamazonpages.TestHomePageAmazon">
    <skipped/>
  </testcase> <!-- testSearchResults -->
  <testcase name="testSetDropdown" time="0.0" classname="testamazonpages.TestHomePageAmazon">
    <skipped/>
  </testcase> <!-- testSetDropdown -->
  <testcase name="testSignInLink" time="0.0" classname="testamazonpages.TestHomePageAmazon">
    <skipped/>
  </testcase> <!-- testSignInLink -->
  <testcase name="testUpperRightLink" time="0.0" classname="testamazonpages.TestHomePageAmazon">
    <skipped/>
  </testcase> <!-- testUpperRightLink -->
  <testcase name="testYourAccountLists" time="0.0" classname="testamazonpages.TestHomePageAmazon">
    <skipped/>
  </testcase> <!-- testYourAccountLists -->
  <testcase name="testYourLists" time="0.0" classname="testamazonpages.TestHomePageAmazon">
    <skipped/>
  </testcase> <!-- testYourLists -->
</testsuite> <!-- Forever21 Home -->
